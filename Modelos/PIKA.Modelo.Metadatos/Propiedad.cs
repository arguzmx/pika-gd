using System;
using System.Collections.Generic;
using System.Text;

namespace PIKA.Modelo.Metadatos
{
  
    public class Propiedad
    {

        public Propiedad()
        {
            Attributes = new HashSet<MetadataAttribute>();
            Value = null;
        }

        public string Id { get; set; }
        public string I18nNameId { get; set; }
        public string Type { get; set; }
        public List<object> Values { get; set; }

        public object DefaultValue { get; set; }
        public int OrderIndex { get; set; }
        public bool Searchable { get; set; }
        public bool Orderable { get; set; }

        public bool Visible { get; set; }
        public bool IsFKId { get; set; }
        public bool IsId { get; set; }
        public bool Required { get; set; }
        public bool Autogenerated { get; set; }


        public bool IskeyValue { get; set; }

        public string HTMLControl { get; set; }

        /// <summary>
        /// Valor default de la propiedad
        /// </summary>
        public object Value
        {
            get { return (Values != null && Values.Count > 0) ? Values[0] : null; }
            set
            {
                if (Values == null) Values = new List<object>();
                if (Values.Count == 0)
                {
                    Values.Add(value);
                }
                else
                {
                    Values[0] = value;
                }
            }
        }

        public void PushValue(object value)
        {
            if (Values == null) Values = new List<object>();
            Values.Add(value);

        }

        /// <summary>
        /// Si el indice es cero lo agrega al inicio, si el indice es mayor que 
        /// la cuenta lo arega al final
        /// </summary>
        /// <param name="value"></param>
        /// <param name="index"></param>
        public void PushValueAt(object value, int index = 0)
        {
            if (Values == null) Values = new List<object>();
            if (Values.Count < index)
            {
                Values.Insert(index, value);
            }
            else
            {
                Values.Add(value);
            }
        }

        public virtual TableAttribute TableAttributes { get; set; }
        public virtual ValidString ValidString { get; set; }
        public virtual ValidNumber ValidNumber { get; set; }

        public virtual ICollection<MetadataAttribute> Attributes { get; set; }

    }
}
