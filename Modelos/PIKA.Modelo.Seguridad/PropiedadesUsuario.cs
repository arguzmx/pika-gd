using PIKA.Modelo.Contacto;
using PIKA.Modelo.Metadatos;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations.Schema;
using System.Text;
using static PIKA.Modelo.Metadatos.PropAttribute;

namespace PIKA.Modelo.Seguridad
{
    // [EntidadVinculada(Entidad: "UnidadOrganizacional", Cardinalidad: TipoCardinalidad.UnoVarios, Padre: "Id", Hijo: "DominioId")]
    [Entidad(EliminarLogico: true)]
    public class PropiedadesUsuario
    {

        /// <summary>
        /// Identificador único del usuario
        /// </summary>
        [Prop(OrderIndex: 0, IsId: true, Required: true, Autogenerated: false,
            HTMLControl: PropAttribute.HTML_HIDDEN, actions: CRUDActions.arwd)]
        [Tbl(OrderIndex: 0, Visible: false)]
        public string UsuarioId { get; set; }

        /// <summary>
        /// Esta propeidad viene de la tabla aspnetuser en oeraciones GET, debe incluirse en POST
        /// </summary>
        [Prop(OrderIndex: 1, Required: true, HTMLControl: PropAttribute.HTML_TEXT,
                actions: CRUDActions.add)]
        [Tbl(OrderIndex: 1)]
        [ValidString(minlen: 1, maxlen: 200)]
        public string username{ get; set; }

        /// <summary>
        ///  OIDC Claims se alamcenana en la tabla aspnetuserclaims
        /// </summary>
        [Prop(OrderIndex: 2, Required: true, HTMLControl: PropAttribute.HTML_TEXT,
                actions: CRUDActions.aw)]
        [Tbl(OrderIndex: 2)]
        [ValidString(minlen: 2, maxlen: 200)]
        public string email { get; set; }

        [Prop(OrderIndex: 3, Required: false, HTMLControl: PropAttribute.HTML_TEXT,
                actions: CRUDActions.aw)]
        [Tbl(OrderIndex: 3)]
        public string name { get; set; }

        [Prop(OrderIndex: 4, Required: false, HTMLControl: PropAttribute.HTML_TEXT,
                actions: CRUDActions.aw)]
        [Tbl(OrderIndex: 4)]
        public string family_name { get; set; }

        [Prop(OrderIndex: 5, Required: false, HTMLControl: PropAttribute.HTML_TEXT,
                actions: CRUDActions.aw)]
        [Tbl(OrderIndex: 5)]
        public string given_name { get; set; }

        [Prop(OrderIndex: 6, Required: false, HTMLControl: PropAttribute.HTML_TEXT,
                actions: CRUDActions.aw)]
        [Tbl(OrderIndex: 6)]
        public string middle_name { get; set; }

        [Prop(OrderIndex: 7, Required: false, HTMLControl: PropAttribute.HTML_TEXT,
                actions: CRUDActions.aw)]
        [Tbl(OrderIndex: 7)]
        public string nickname { get; set; }

        [Prop(OrderIndex: 8, Required: false, HTMLControl: PropAttribute.HTML_NONE,
                actions: CRUDActions.none)]
        [Tbl(OrderIndex: 8)]
        public DateTime? updated_at { get; set; }

        [Prop(OrderIndex: 9, Required: false, HTMLControl: PropAttribute.HTML_NONE,
                actions: CRUDActions.none, DefaultValue: "false")]
        [Tbl(OrderIndex: 9)]
        public bool? email_verified { get; set; }


        /// <summary>
        ///  Propeidades de la aplciación
        /// </summary>

        [Prop(OrderIndex: 10, Required: false, HTMLControl: PropAttribute.HTML_SELECT,
        actions: CRUDActions.write)]
        [Tbl(OrderIndex: 10)]
        public string generoid { get; set; }

        [Prop(OrderIndex: 11, Required: false, HTMLControl: PropAttribute.HTML_SELECT,
        actions: CRUDActions.write)]
        [Tbl(OrderIndex: 11)]
        public string paisid { get; set; }


        [Prop(OrderIndex: 12, Required: false, HTMLControl: PropAttribute.HTML_SELECT,
            actions: CRUDActions.write)]
        [Tbl(OrderIndex: 12)]
        public string estadoid { get; set; }

        [Prop(OrderIndex: 13, Required: false, HTMLControl: PropAttribute.HTML_SELECT,
            actions: CRUDActions.write)]
        [Tbl(OrderIndex: 13)]
        public string gmt { get; set; }


        [Prop(OrderIndex: 14, Required: false, HTMLControl: PropAttribute.HTML_NONE,
            actions: CRUDActions.none)]
        [Tbl(OrderIndex: 14)]
        public float? gmt_offset { get; set; }


        /// <summary>
        /// Especifica si la cuenta se encuentra ainactiva
        /// </summary>
        [Prop(OrderIndex: 15, Required: false, HTMLControl: PropAttribute.HTML_CHECKBOX,
            actions: CRUDActions.none)]
        [Tbl(OrderIndex: 15)]
        public bool Inactiva { get; set; }

        /// <summary>
        /// Especifica si la cuenta ha sido marcada para eliminar
        /// </summary>
        [Prop(OrderIndex: 16, Required: false, HTMLControl: PropAttribute.HTML_CHECKBOX,
                actions: CRUDActions.none)]
        [Tbl(OrderIndex: 16)]/// 
        public bool Eliminada { get; set; }

        /// <summary>
        /// Esta propiedad se alamcena y debe obtenerse de la tabla de los claims del usuario 
        /// No debe incluirse en consultas debido a que puede degradar el performance
        /// </summary>
        [NotMapped]
        [Prop(OrderIndex: 500, Required: false, HTMLControl: PropAttribute.HTML_AVATAR,
                actions: CRUDActions.write)]
        public string picture { get; set; }



        /// <summary>
        /// Esta propiedad solo es util al creal el suaurio y no debe persisttirse
        /// </summary>
        [NotMapped]
        [Prop(OrderIndex: 1000, Required: true, HTMLControl: PropAttribute.HTML_PASSWORD,
            actions: CRUDActions.aw)]
        [ValidString(minlen: 6, maxlen: 200)]
        public string password { get; set; }

        /// <summary>
        ///  Esta propeida se actualzai vía el login del usuario
        /// </summary>
        public DateTime? Ultimoacceso { get; set; }

        //public Pais pais { get; set; }
        //public Estado estado { get; set; }

        public Genero genero { get; set; }

        public ApplicationUser Usuario { get; set; }


    }
}
